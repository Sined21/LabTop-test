{"version":3,"sources":["_fonts.scss","styles.css","_reset.scss","_vars.scss","_include-media.scss","_common.scss","_buttons.scss","_mixins.scss","_service.scss","_documents.scss","_product.scss"],"names":[],"mappings":"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","file":"styles.css","sourcesContent":["@font-face {\n\tfont-family: 'Proxima Nova';\n\tsrc: url('#{$fonts}ProximaNova-Black.woff2') format('woff2'),\n\t\turl('#{$fonts}ProximaNova-Black.woff') format('woff');\n\tfont-weight: 900;\n\tfont-style: normal;\n\tfont-display: swap;\n}\n\n@font-face {\n\tfont-family: 'Proxima Nova';\n\tsrc: url('#{$fonts}ProximaNova-Extrabld.woff2') format('woff2'),\n\t\turl('#{$fonts}ProximaNova-Extrabld.woff') format('woff');\n\tfont-weight: 800;\n\tfont-style: normal;\n\tfont-display: swap;\n}\n\n@font-face {\n\tfont-family: 'Proxima Nova';\n\tsrc: url('#{$fonts}ProximaNova-Bold.woff2') format('woff2'),\n\t\turl('#{$fonts}ProximaNova-Bold.woff') format('woff');\n\tfont-weight: 700;\n\tfont-style: normal;\n\tfont-display: swap;\n}\n\n@font-face {\n\tfont-family: 'Proxima Nova';\n\tsrc: url('#{$fonts}ProximaNova-Regular.woff2') format('woff2'),\n\t\turl('#{$fonts}ProximaNova-Regular.woff') format('woff');\n\tfont-weight: 400;\n\tfont-style: normal;\n\tfont-display: swap;\n}\n\n@font-face {\n\tfont-family: 'Proxima Nova';\n\tsrc: url('#{$fonts}ProximaNova-Light.woff2') format('woff2'),\n\t\turl('#{$fonts}ProximaNova-Light.woff') format('woff');\n\tfont-weight: 300;\n\tfont-style: normal;\n\tfont-display: swap;\n}\n\n// dev2\n// dev3\n// dev4\n","@font-face {\n\tfont-family: 'Proxima Nova';\n\tsrc: url(\"../fonts/ProximaNova-Black.woff2\") format(\"woff2\"), url(\"../fonts/ProximaNova-Black.woff\") format(\"woff\");\n\tfont-weight: 900;\n\tfont-style: normal;\n\tfont-display: swap;\n}\n\n@font-face {\n\tfont-family: 'Proxima Nova';\n\tsrc: url(\"../fonts/ProximaNova-Extrabld.woff2\") format(\"woff2\"), url(\"../fonts/ProximaNova-Extrabld.woff\") format(\"woff\");\n\tfont-weight: 800;\n\tfont-style: normal;\n\tfont-display: swap;\n}\n\n@font-face {\n\tfont-family: 'Proxima Nova';\n\tsrc: url(\"../fonts/ProximaNova-Bold.woff2\") format(\"woff2\"), url(\"../fonts/ProximaNova-Bold.woff\") format(\"woff\");\n\tfont-weight: 700;\n\tfont-style: normal;\n\tfont-display: swap;\n}\n\n@font-face {\n\tfont-family: 'Proxima Nova';\n\tsrc: url(\"../fonts/ProximaNova-Regular.woff2\") format(\"woff2\"), url(\"../fonts/ProximaNova-Regular.woff\") format(\"woff\");\n\tfont-weight: 400;\n\tfont-style: normal;\n\tfont-display: swap;\n}\n\n@font-face {\n\tfont-family: 'Proxima Nova';\n\tsrc: url(\"../fonts/ProximaNova-Light.woff2\") format(\"woff2\"), url(\"../fonts/ProximaNova-Light.woff\") format(\"woff\");\n\tfont-weight: 300;\n\tfont-style: normal;\n\tfont-display: swap;\n}\n\nhtml {\n\tfont-size: 10px;\n}\n\nbody {\n\tmargin: 0;\n\tmin-width: 320px;\n\tbackground: #EAEFF5;\n\tcolor: #233148;\n\tfont: 400 1.8rem/1.56 \"Proxima Nova\", sans-serif;\n\tletter-spacing: 0.02em;\n\tfont-smoothing: antialiased;\n\ttext-rendering: optimizeLegibility;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n@media (max-width: 767px) {\n\tbody {\n\t\tfont-size: 1.6rem;\n\t\tline-height: 1.5;\n\t}\n}\n\n*, *::before, *::after {\n\tbox-sizing: border-box;\n}\n\na {\n\ttext-decoration: none;\n\tcolor: inherit;\n\ttransition: all 0.3s ease;\n}\n\na:hover {\n\ttext-decoration: underline;\n}\n\np, ol, ul {\n\tmargin: 0 0 2rem;\n}\n\nbutton,\ninput[type=\"search\"],\ninput[type=\"button\"],\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n\t-webkit-appearance: none;\n\tcursor: pointer;\n\ttransition: all 0.3s ease;\n}\n\nbutton::-moz-focus-inner,\ninput[type=\"reset\"]::-moz-focus-inner,\ninput[type=\"button\"]::-moz-focus-inner,\ninput[type=\"submit\"]::-moz-focus-inner {\n\tborder: none;\n\tpadding: 0;\n}\n\n.wrapper {\n\tmin-height: 100vh;\n\tdisplay: flex;\n\tflex-direction: column;\n\toverflow-x: hidden;\n}\n\n#main {\n\tflex-grow: 1;\n}\n\nh1 {\n\tmargin: 0 0 0.5em;\n\tfont-weight: 700;\n}\n\nh1 a, h1 a:hover {\n\tcolor: inherit;\n}\n\nh2 {\n\tmargin: 0 0 0.5em;\n\tfont-weight: 700;\n}\n\nh2 a, h2 a:hover {\n\tcolor: inherit;\n}\n\nh3 {\n\tmargin: 0 0 0.5em;\n\tfont-weight: 700;\n}\n\nh3 a, h3 a:hover {\n\tcolor: inherit;\n}\n\nh4 {\n\tmargin: 0 0 0.5em;\n\tfont-weight: 700;\n}\n\nh4 a, h4 a:hover {\n\tcolor: inherit;\n}\n\nh5 {\n\tmargin: 0 0 0.5em;\n\tfont-weight: 700;\n}\n\nh5 a, h5 a:hover {\n\tcolor: inherit;\n}\n\nh6 {\n\tmargin: 0 0 0.5em;\n\tfont-weight: 700;\n}\n\nh6 a, h6 a:hover {\n\tcolor: inherit;\n}\n\n.bg-img {\n\tbackground-position: 50% 50%;\n\tbackground-repeat: no-repeat;\n\tbackground-size: cover;\n}\n\n.sr-only {\n\tposition: absolute;\n\twidth: 1px;\n\theight: 1px;\n\tpadding: 0;\n\toverflow: hidden;\n\tclip: rect(0, 0, 0, 0);\n\twhite-space: nowrap;\n\tborder: 0;\n}\n\nimg.lazyload {\n\topacity: 0;\n\ttransition: opacity 0.3s;\n}\n\nimg.lazyload.lazyloaded {\n\topacity: 1;\n}\n\n.img-fluid {\n\twidth: 100%;\n\theight: auto;\n}\n\n.container {\n\tmax-width: 123rem;\n\tpadding-left: 2.9rem;\n\tpadding-right: 2.9rem;\n\tmargin-left: auto;\n\tmargin-right: auto;\n}\n\n.grid-container {\n\tposition: relative;\n\tborder-style: solid;\n\tborder-width: 0 1px 0 1px;\n}\n\n.grid-container::after {\n\tcontent: '';\n\tposition: absolute;\n\ttop: 0;\n\tleft: 50%;\n\tbottom: 0;\n\tborder-style: solid;\n\tborder-width: 0 1px 0 0;\n\tborder-color: inherit;\n}\n\n.grid-container--light {\n\tborder-color: rgba(217, 223, 230, 0.2);\n}\n\n.grid-container--dark {\n\tborder-color: rgba(18, 51, 106, 0.2);\n}\n\n.h2 {\n\tfont-size: 4.8rem;\n\tfont-weight: 900;\n\tline-height: 1.2;\n\tletter-spacing: 0.03em;\n\ttext-transform: uppercase;\n}\n\n@media (max-width: 767px) {\n\t.h2 {\n\t\tfont-size: 3rem;\n\t}\n}\n\n.h3 {\n\tfont-size: 3.2rem;\n\tfont-weight: 700;\n\tline-height: 1.218125;\n}\n\n@media (max-width: 767px) {\n\t.h3 {\n\t\tfont-size: 2.2rem;\n\t}\n}\n\n.title-decor {\n\tposition: relative;\n\tpadding-top: 4.7rem;\n}\n\n@media (max-width: 767px) {\n\t.title-decor {\n\t\tpadding-top: 4.5rem;\n\t}\n}\n\n.title-decor::after {\n\tcontent: '';\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 2.9rem;\n\theight: 2.9rem;\n\tbackground: url(\"data:image/svg+xml,%3Csvg width='28' height='29' viewBox='0 0 28 29' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M11.0557 22.5792L22.1114 16.1158L27.6393 12.8842V0L22.1114 3.23167L11.0557 9.65249V9.69501L0 16.1158V29L11.0557 22.5792Z' fill='%231F65D9'/%3E%3C/svg%3E%0A\") no-repeat center/contain;\n}\n\n@media (max-width: 767px) {\n\t.title-decor::after {\n\t\twidth: 2rem;\n\t\theight: 2rem;\n\t}\n}\n\n[data-scroll] {\n\ttransition: opacity 1s cubic-bezier(0.5, 0, 0, 1) 0.7s, transform 1s cubic-bezier(0.5, 0, 0, 1) 0.5s;\n}\n\n[data-scroll=\"in\"] {\n\topacity: 1;\n\ttransform: translateY(0);\n}\n\n[data-scroll=\"out\"] {\n\topacity: 0;\n\ttransform: translateY(5rem);\n}\n\n/* buttons */\n.btn {\n\tcursor: pointer;\n\tuser-select: none;\n\tdisplay: inline-flex;\n\talign-items: center;\n\tjustify-content: center;\n\tfont-family: \"Proxima Nova\", sans-serif;\n\tline-height: 1;\n\ttext-align: center;\n\ttext-decoration: none;\n\ttransition: all 0.3s ease;\n}\n\n.btn--md {\n\tpadding: 1.4rem 8.8rem;\n}\n\n@media (min-width: 768px) {\n\t.btn--md {\n\t\tpadding: 2.2rem 12.5rem;\n\t}\n}\n\n.btn--accent {\n\tborder: .5rem solid transparent;\n\tbackground-color: #FCCF18;\n\tcolor: #233148;\n\tfont-weight: 700;\n\tfont-size: 1.6rem;\n\tletter-spacing: 0.02em;\n\ttransition-delay: 1s;\n\ttext-transform: uppercase;\n\tposition: relative;\n}\n\n.btn--accent:before {\n\tcontent: '';\n\tposition: absolute;\n\twidth: calc(100% + 1rem);\n\theight: calc(100% + 1rem);\n\ttop: calc(0.5rem/-1);\n\tleft: calc(0.5rem/-1);\n\tbackground: linear-gradient(to right, #FCCF18 0%, #FCCF18 100%), linear-gradient(to top, #FCCF18 50%, transparent 50%), linear-gradient(to top, #FCCF18 50%, transparent 50%), linear-gradient(to right, #FCCF18 0%, #FCCF18 100%), linear-gradient(to left, #FCCF18 0%, #FCCF18 100%);\n\tbackground-repeat: no-repeat, no-repeat;\n\tbackground-size: 200% 0.5rem, 0.5rem 400%, 0.5rem 400%, 55% 0.5rem, 55% 0.5rem;\n\tbackground-position: 50% 100%, 0% 100%, 100% 100%, 100% 0%, 0% 0%;\n\ttransition: transform 0.3s ease-in-out, background-position 0.3s ease-in-out, background-size 0.3s ease-in-out;\n\ttransform: scaleX(1) rotate(0deg);\n\ttransition-delay: 0s, 0.3s, 0.6s;\n}\n\n.btn--accent:hover:before {\n\tbackground-size: 100% 0.5rem, 0.5rem 200%, 0.5rem 200%, 0% 0.5rem, 0% 0.5rem;\n\tbackground-position: 50% 100%, 0% 0%, 100% 0%, 100% 0%, 0% 0%;\n\ttransform: scaleX(0.2) rotate(0deg);\n\ttransition-delay: 0.6s, 0.3s, 0s;\n}\n\n@media (min-width: 768px) {\n\t.btn--accent {\n\t\tfont-size: 2.2rem;\n\t}\n}\n\n.btn--accent:hover {\n\tbackground-color: rgba(252, 207, 24, 0.5);\n\ttext-decoration: none;\n\ttransition-delay: 0s;\n}\n\n/* service */\n.service {\n\tposition: relative;\n\tbackground-color: #233148;\n\tcolor: #fff;\n}\n\n.service__decor {\n\tpointer-events: none;\n\tposition: absolute;\n\ttop: 14rem;\n\tleft: 50%;\n\ttransform: translateX(-50%);\n\twidth: 58.5rem;\n}\n\n@media (min-width: 768px) {\n\t.service__decor {\n\t\ttop: 18rem;\n\t}\n}\n\n.service__inner {\n\tpadding: 9rem 0 3rem;\n}\n\n@media (min-width: 768px) {\n\t.service__inner {\n\t\tpadding: 13rem 0 19rem;\n\t}\n}\n\n.service__title {\n\tmargin-bottom: 6rem;\n}\n\n@media (min-width: 768px) {\n\t.service__title {\n\t\tmargin-bottom: 12rem;\n\t}\n}\n\n.service__list {\n\tlist-style: none;\n\tpadding: 0;\n\tmargin: 0;\n}\n\n@media (min-width: 768px) {\n\t.service__list {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t}\n}\n\n.service__item {\n\tpadding: 0;\n\tmargin-bottom: 5rem;\n}\n\n@media (min-width: 768px) {\n\t.service__item {\n\t\twidth: 50%;\n\t\tpadding: 0 5rem;\n\t\tmargin-bottom: 10rem;\n\t}\n}\n\n@media (min-width: 992px) {\n\t.service__item {\n\t\tpadding: 0 4.5rem 0 10rem;\n\t}\n}\n\n.service__icon {\n\tdisplay: inline-flex;\n\twidth: 3.6rem;\n\tmargin-bottom: 3rem;\n\tcolor: #1F65D9;\n}\n\n@media (min-width: 768px) {\n\t.service__icon {\n\t\twidth: 5.2rem;\n\t}\n}\n\n.service__icon svg {\n\twidth: 100%;\n\theight: auto;\n}\n\n.service__subtitle {\n\tmargin-bottom: 3.5rem;\n}\n\n@media (min-width: 768px) {\n\t.service__subtitle {\n\t\tmargin-bottom: 5rem;\n\t}\n}\n\n.service__text {\n\tmargin-bottom: 0;\n\tfont-weight: 300;\n\tcolor: #8796AE;\n}\n\n/* documents */\n.documents {\n\tposition: relative;\n\tcolor: #fff;\n}\n\n@media (min-width: 768px) {\n\t.documents {\n\t\tmargin-top: -10.8rem;\n\t}\n}\n\n@media (max-width: 1199px) {\n\t.documents {\n\t\tbackground-color: #1F65D9;\n\t}\n}\n\n.documents__inner {\n\tposition: relative;\n\tpadding-top: 19.5rem;\n}\n\n@media (min-width: 768px) {\n\t.documents__inner {\n\t\tpadding-top: 7rem;\n\t}\n}\n\n@media (min-width: 1200px) {\n\t.documents__inner::before {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tbottom: 0;\n\t\tright: 0;\n\t\twidth: 100vw;\n\t\tbackground-color: inherit;\n\t\tbackground-color: #1F65D9;\n\t}\n}\n\n@media (max-width: 767px) {\n\t.documents__content {\n\t\tmax-width: 20rem;\n\t\tpadding-bottom: 6.5rem;\n\t}\n}\n\n@media (min-width: 768px) {\n\t.documents__content {\n\t\tposition: relative;\n\t\twidth: 50%;\n\t\tpadding-right: 5rem;\n\t\tpadding-bottom: 9rem;\n\t}\n}\n\n@media (min-width: 1200px) {\n\t.documents__content {\n\t\tdisplay: flex;\n\t}\n}\n\n.documents__title {\n\tmargin-right: 9.5rem;\n\tmargin-bottom: 4.8rem;\n\tfont-weight: 800;\n\ttext-transform: uppercase;\n}\n\n.documents__text {\n\tmargin-bottom: 0;\n}\n\n@media (min-width: 768px) {\n\t.documents__text {\n\t\tfont-size: 2.4rem;\n\t\tline-height: 1.41666666667;\n\t}\n}\n\n@media (min-width: 1200px) {\n\t.documents__text {\n\t\tmargin-top: 4.5rem;\n\t}\n}\n\n.documents__decor {\n\tpointer-events: none;\n\tposition: absolute;\n\ttop: 20rem;\n\tleft: -3rem;\n\twidth: 19.6rem;\n}\n\n@media (min-width: 768px) {\n\t.documents__decor {\n\t\ttop: 0.8rem;\n\t\tleft: 0;\n\t\twidth: 23.8rem;\n\t}\n}\n\n.documents__control {\n\tposition: relative;\n\tbottom: -3.7rem;\n\twidth: 50%;\n\ttext-align: center;\n}\n\n.documents__btn {\n\tposition: absolute;\n\ttop: 100%;\n\tleft: 50%;\n\tz-index: 2;\n\ttransform: translate(-50%, -50%);\n}\n\n.documents__visual {\n\tpointer-events: none;\n\tposition: absolute;\n\twidth: 46.4rem;\n\ttop: -4rem;\n\tright: -20rem;\n\tmargin: 0;\n}\n\n@media (min-width: 768px) {\n\t.documents__visual {\n\t\twidth: 58%;\n\t\ttop: -7.3rem;\n\t\tright: -1.7rem;\n\t}\n}\n\n/* product */\n.product__inner {\n\tmin-height: 37.5rem;\n\tpadding-top: 9.5rem;\n}\n\n@media (min-width: 768px) {\n\t.product__inner {\n\t\tmin-height: 76rem;\n\t\tpadding-top: 16.5rem;\n\t}\n}\n","html {\n\tfont-size: 10px;\n}\n\nbody {\n\tmargin: 0;\n\tmin-width: 320px;\n\tbackground: $body-bg;\n\tcolor: $body-color;\n\tfont: $font-weight-base #{$font-size-base}/$line-height-base $font-family-base;\n\tletter-spacing: $letter-spacing-base;\n\tfont-smoothing: antialiased;\n\ttext-rendering: optimizeLegibility;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\tdisplay: flex;\n\tflex-direction: column;\n\n\t@include media('<md') {\n\t\tfont-size: 1.6rem;\n\t\tline-height: 1.5;\n\t}\n}\n\n* {\n\t&,\n\t&::before,\n\t&::after {\n\t\tbox-sizing: border-box;\n\t}\n}\n\na {\n\ttext-decoration: none;\n\tcolor: $links-color-base;\n\ttransition: $transition;\n}\n\na:hover {\n\ttext-decoration: underline;\n}\n\np, ol, ul {\n\tmargin: 0 0 2rem;\n}\n\nbutton,\ninput[type=\"search\"],\ninput[type=\"button\"],\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n\t-webkit-appearance: none;\n\tcursor: pointer;\n\ttransition: $transition;\n}\n\nbutton::-moz-focus-inner,\ninput[type=\"reset\"]::-moz-focus-inner,\ninput[type=\"button\"]::-moz-focus-inner,\ninput[type=\"submit\"]::-moz-focus-inner {\n\tborder: none;\n\tpadding: 0;\n}\n\n.wrapper {\n\tmin-height: 100vh;\n\tdisplay: flex;\n\tflex-direction: column;\n\toverflow-x: hidden;\n}\n\n#main {\n\tflex-grow: 1;\n}\n\n@for $i from 1 through 6 {\n\th#{$i} {\n\t\tmargin: 0 0 0.5em;\n\t\tfont-weight: $headings-font-weight;\n\n\t\ta {\n\t\t\t&,\n\t\t\t&:hover {\n\t\t\t\tcolor: inherit;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// dev2\n// dev3\n// dev4","// vars\n$images: '../images/';\n$fonts: '../fonts/';\n\n// typography\n$proximaNova: 'Proxima Nova', sans-serif;\n\n$thin: 100 !default;\n$light: 300 !default;\n$regular: 400 !default;\n$medium: 500 !default;\n$bold: 700 !default;\n$extraBold: 800 !default;\n$ultraBold: 900 !default;\n\n// breakpoints\n$breakpoints: (\n\txs: 0,\n\tsm: 576px,\n\tmd: 768px,\n\tlg: 992px,\n\txl: 1200px,\n\txxl: 1400px\n);\n\n// colors\n$white: #fff;\n$black: #000;\n\n$colorPrimary: #1F65D9;\n$colorSecondary: #233148;\n$colorThird: #EAEFF5;\n$colorAccent: #FCCF18;\n\n$text: #8796AE;\n\n// base vars\n$body-color: $colorSecondary;\n$body-bg: $colorThird;\n$font-family-base: $proximaNova;\n$font-size-base: 1.8rem;\n$line-height-base: 1.56;\n$font-weight-base: $regular;\n$letter-spacing-base: 0.02em;\n$links-color-base: inherit;\n$headings-font-weight: $bold;\n\n$transition: all .3s ease;\n\n// dev2\n// dev3\n// dev4","@charset \"UTF-8\";\r\n\r\n//     _            _           _                           _ _\r\n//    (_)          | |         | |                         | (_)\r\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\r\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\r\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\r\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\r\n//\r\n//      Simple, elegant and maintainable media queries in Sass\r\n//                        v1.4.9\r\n//\r\n//                http://include-media.com\r\n//\r\n//         Authors: Eduardo Boucas (@eduardoboucas)\r\n//                  Hugo Giraudel (@hugogiraudel)\r\n//\r\n//      This project is licensed under the terms of the MIT license\r\n\r\n\r\n////\r\n/// include-media library public configuration\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n\r\n///\r\n/// Creates a list of global breakpoints\r\n///\r\n/// @example scss - Creates a single breakpoint with the label `phone`\r\n///  $breakpoints: ('phone': 320px);\r\n///\r\n$breakpoints: (\r\n  'phone': 320px,\r\n  'tablet': 768px,\r\n  'desktop': 1024px\r\n) !default;\r\n\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\r\n///  );\r\n///\r\n$media-expressions: (\r\n  'screen': 'screen',\r\n  'print': 'print',\r\n  'handheld': 'handheld',\r\n  'landscape': '(orientation: landscape)',\r\n  'portrait': '(orientation: portrait)',\r\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\r\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\r\n) !default;\r\n\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media('>128px') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media('>20em') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media('>2.0rem') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n  'px': 1,\r\n  'em': 0.01,\r\n  'rem': 0.1,\r\n  '': 0\r\n) !default;\r\n\r\n///\r\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\r\n/// for browsers that don't support media queries.\r\n///\r\n/// @example scss - Disables support for media queries\r\n///  $im-media-support: false;\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n$im-media-support: true !default;\r\n\r\n///\r\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\r\n/// intercept the breakpoint will be displayed, any others will be ignored.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'tablet';\r\n///  @include media('>=desktop') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-breakpoint: 'desktop' !default;\r\n\r\n///\r\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\r\n/// are not supported.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'screen') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///   /* Generates: */\r\n///   .foo {\r\n///     color: tomato;\r\n///   }\r\n///\r\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'retina2x') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\r\n\r\n////\r\n/// Cross-engine logging engine\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Log a message either with `@error` if supported\r\n/// else with `@warn`, using `feature-exists('at-error')`\r\n/// to detect support.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@function im-log($message) {\r\n  @if feature-exists('at-error') {\r\n    @error $message;\r\n  } @else {\r\n    @warn $message;\r\n    $_: noop();\r\n  }\r\n\r\n  @return $message;\r\n}\r\n\r\n\r\n///\r\n/// Wrapper mixin for the log function so it can be used with a more friendly\r\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\r\n/// within functions because it is not possible to include a mixin in a function\r\n/// and use the mixin everywhere else because it's much more elegant.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@mixin log($message) {\r\n  @if im-log($message) {}\r\n}\r\n\r\n\r\n///\r\n/// Function with no `@return` called next to `@warn` in Sass 3.3\r\n/// to trigger a compiling error and stop the process.\r\n///\r\n@function noop() {}\r\n\r\n///\r\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\r\n///\r\n@function im-intercepts-static-breakpoint($conditions...) {\r\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\r\n\r\n  @if not $no-media-breakpoint-value {\r\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\r\n  }\r\n\r\n  @each $condition in $conditions {\r\n    @if not map-has-key($media-expressions, $condition) {\r\n      $operator: get-expression-operator($condition);\r\n      $prefix: get-expression-prefix($operator);\r\n      $value: get-expression-value($condition, $operator);\r\n\r\n      // scss-lint:disable SpaceAroundOperator\r\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\r\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\r\n        @return false;\r\n      }\r\n    } @else if not index($im-no-media-expressions, $condition) {\r\n      @return false;\r\n    }\r\n  }\r\n\r\n  @return true;\r\n}\r\n\r\n////\r\n/// Parsing engine\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Get operator of an expression\r\n///\r\n/// @param {String} $expression - Expression to extract operator from\r\n///\r\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\r\n///\r\n@function get-expression-operator($expression) {\r\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\r\n    @if str-index($expression, $operator) {\r\n      @return $operator;\r\n    }\r\n  }\r\n\r\n  // It is not possible to include a mixin inside a function, so we have to\r\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n  // functions cannot be called anywhere in Sass, we need to hack the call in\r\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n  $_: im-log('No operator found in `#{$expression}`.');\r\n}\r\n\r\n\r\n///\r\n/// Get dimension of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract dimension from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {String} - `width` or `height` (or potentially anything else)\r\n///\r\n@function get-expression-dimension($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\r\n  $dimension: 'width';\r\n\r\n  @if str-length($parsed-dimension) > 0 {\r\n    $dimension: $parsed-dimension;\r\n  }\r\n\r\n  @return $dimension;\r\n}\r\n\r\n\r\n///\r\n/// Get dimension prefix based on an operator\r\n///\r\n/// @param {String} $operator - Operator\r\n///\r\n/// @return {String} - `min` or `max`\r\n///\r\n@function get-expression-prefix($operator) {\r\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\r\n}\r\n\r\n\r\n///\r\n/// Get value of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract value from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {Number} - A numeric value\r\n///\r\n@function get-expression-value($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $value: str-slice($expression, $operator-index + str-length($operator));\r\n\r\n  @if map-has-key($breakpoints, $value) {\r\n    $value: map-get($breakpoints, $value);\r\n  } @else {\r\n    $value: to-number($value);\r\n  }\r\n\r\n  $interval: map-get($unit-intervals, unit($value));\r\n\r\n  @if not $interval {\r\n    // It is not possible to include a mixin inside a function, so we have to\r\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n    // functions cannot be called anywhere in Sass, we need to hack the call in\r\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n    $_: im-log('Unknown unit `#{unit($value)}`.');\r\n  }\r\n\r\n  @if $operator == '>' {\r\n    $value: $value + $interval;\r\n  } @else if $operator == '<' {\r\n    $value: $value - $interval;\r\n  }\r\n\r\n  @return $value;\r\n}\r\n\r\n\r\n///\r\n/// Parse an expression to return a valid media-query expression\r\n///\r\n/// @param {String} $expression - Expression to parse\r\n///\r\n/// @return {String} - Valid media query\r\n///\r\n@function parse-expression($expression) {\r\n  // If it is part of $media-expressions, it has no operator\r\n  // then there is no need to go any further, just return the value\r\n  @if map-has-key($media-expressions, $expression) {\r\n    @return map-get($media-expressions, $expression);\r\n  }\r\n\r\n  $operator: get-expression-operator($expression);\r\n  $dimension: get-expression-dimension($expression, $operator);\r\n  $prefix: get-expression-prefix($operator);\r\n  $value: get-expression-value($expression, $operator);\r\n\r\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\r\n}\r\n\r\n///\r\n/// Slice `$list` between `$start` and `$end` indexes\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list - List to slice\r\n/// @param {Number} $start [1] - Start index\r\n/// @param {Number} $end [length($list)] - End index\r\n///\r\n/// @return {List} Sliced list\r\n///\r\n@function slice($list, $start: 1, $end: length($list)) {\r\n  @if length($list) < 1 or $start > $end {\r\n    @return ();\r\n  }\r\n\r\n  $result: ();\r\n\r\n  @for $i from $start through $end {\r\n    $result: append($result, nth($list, $i));\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n////\r\n/// String to number converter\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Casts a string into a number\r\n///\r\n/// @param {String | Number} $value - Value to be parsed\r\n///\r\n/// @return {Number}\r\n///\r\n@function to-number($value) {\r\n  @if type-of($value) == 'number' {\r\n    @return $value;\r\n  } @else if type-of($value) != 'string' {\r\n    $_: im-log('Value for `to-number` should be a number or a string.');\r\n  }\r\n\r\n  $first-character: str-slice($value, 1, 1);\r\n  $result: 0;\r\n  $digits: 0;\r\n  $minus: ($first-character == '-');\r\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\r\n\r\n  // Remove +/- sign if present at first character\r\n  @if ($first-character == '+' or $first-character == '-') {\r\n    $value: str-slice($value, 2);\r\n  }\r\n\r\n  @for $i from 1 through str-length($value) {\r\n    $character: str-slice($value, $i, $i);\r\n\r\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\r\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\r\n    }\r\n\r\n    @if $character == '.' {\r\n      $digits: 1;\r\n    } @else if $digits == 0 {\r\n      $result: $result * 10 + map-get($numbers, $character);\r\n    } @else {\r\n      $digits: $digits * 10;\r\n      $result: $result + map-get($numbers, $character) / $digits;\r\n    }\r\n  }\r\n\r\n  @return if($minus, -$result, $result);\r\n}\r\n\r\n\r\n///\r\n/// Add `$unit` to `$value`\r\n///\r\n/// @param {Number} $value - Value to add unit to\r\n/// @param {String} $unit - String representation of the unit\r\n///\r\n/// @return {Number} - `$value` expressed in `$unit`\r\n///\r\n@function to-length($value, $unit) {\r\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\r\n\r\n  @if not index(map-keys($units), $unit) {\r\n    $_: im-log('Invalid unit `#{$unit}`.');\r\n  }\r\n\r\n  @return $value * map-get($units, $unit);\r\n}\r\n\r\n///\r\n/// This mixin aims at redefining the configuration just for the scope of\r\n/// the call. It is helpful when having a component needing an extended\r\n/// configuration such as custom breakpoints (referred to as tweakpoints)\r\n/// for instance.\r\n///\r\n/// @author Hugo Giraudel\r\n///\r\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\r\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\r\n///\r\n/// @example scss - Extend the global breakpoints with a tweakpoint\r\n///  @include media-context(('custom': 678px)) {\r\n///    .foo {\r\n///      @include media('>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend the global media expressions with a custom one\r\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend both configuration maps\r\n///  @include media-context(('custom': 678px), ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\r\n  // Save global configuration\r\n  $global-breakpoints: $breakpoints;\r\n  $global-media-expressions: $media-expressions;\r\n\r\n  // Update global configuration\r\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\r\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\r\n\r\n  @content;\r\n\r\n  // Restore global configuration\r\n  $breakpoints: $global-breakpoints !global;\r\n  $media-expressions: $global-media-expressions !global;\r\n}\r\n\r\n////\r\n/// include-media public exposed API\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media('>phone') { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media('>phone', '<=tablet') { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media('>=358px', '<850px') { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media('>desktop', '<=1350px') { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media('retina2x') { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media('>=350px', '<tablet', 'retina3x') { }\r\n///\r\n@mixin media($conditions...) {\r\n  // scss-lint:disable SpaceAroundOperator\r\n  @if ($im-media-support and length($conditions) == 0) or\r\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\r\n    @content;\r\n  } @else if ($im-media-support and length($conditions) > 0) {\r\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\r\n      // Recursive call\r\n      @include media(slice($conditions, 2)...) {\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n}\r\n",".bg-img {\n\tbackground-position: 50% 50%;\n\tbackground-repeat: no-repeat;\n\tbackground-size: cover;\n}\n\n.sr-only {\n\tposition: absolute;\n\twidth: 1px;\n\theight: 1px;\n\tpadding: 0;\n\toverflow: hidden;\n\tclip: rect(0, 0, 0, 0);\n\twhite-space: nowrap;\n\tborder: 0;\n}\n\nimg.lazyload {\n\topacity: 0;\n\ttransition: opacity 0.3s;\n\n\t&.lazyloaded {\n\t\topacity: 1;\n\t}\n}\n\n.img-fluid {\n\twidth: 100%;\n\theight: auto;\n}\n\n.container {\n\tmax-width: 123rem;\n\tpadding-left: 2.9rem;\n\tpadding-right: 2.9rem;\n\tmargin-left: auto;\n\tmargin-right: auto;\n}\n\n.grid-container {\n\tposition: relative;\n\tborder-style: solid;\n\tborder-width: 0 1px 0 1px;\n\n\t&::after {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 50%;\n\t\tbottom: 0;\n\t\tborder-style: solid;\n\t\tborder-width: 0 1px 0 0;\n\t\tborder-color: inherit;\n\t}\n\n\t&--light {\n\t\tborder-color: rgba(#D9DFE6, .2);\n\t}\n\n\t&--dark {\n\t\tborder-color: rgba(#12336A, .2);\n\t}\n}\n\n.h2 {\n\tfont-size: 4.8rem;\n\tfont-weight: $ultraBold;\n\tline-height: 1.2;\n\tletter-spacing: 0.03em;\n\ttext-transform: uppercase;\n\n\t@include media('<md'){\n\t\tfont-size: 3rem;\n\t}\n}\n\n.h3 {\n\tfont-size: 3.2rem;\n\tfont-weight: $bold;\n\tline-height: 1.218125;\n\n\t@include media('<md') {\n\t\tfont-size: 2.2rem;\n\t}\n}\n\n.title-decor {\n\tposition: relative;\n\tpadding-top: 4.7rem;\n\n\t@include media('<md'){\n\t\tpadding-top: 4.5rem;\n\t}\n\n\t&::after {\n\t\t$color: 1F65D9;\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: 2.9rem;\n\t\theight: 2.9rem;\n\t\tbackground: url(\"data:image/svg+xml,%3Csvg width='28' height='29' viewBox='0 0 28 29' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M11.0557 22.5792L22.1114 16.1158L27.6393 12.8842V0L22.1114 3.23167L11.0557 9.65249V9.69501L0 16.1158V29L11.0557 22.5792Z' fill='%23#{$color}'/%3E%3C/svg%3E%0A\") no-repeat center/contain;\n\t\t\n\t\t@include media('<md'){\n\t\t\twidth: 2rem;\n\t\t\theight: 2rem;\n\t\t}\n\t}\n}\n\n[data-scroll] {\n\ttransition: opacity 1s cubic-bezier(0.5, 0, 0, 1) 0.7s, transform 1s cubic-bezier(0.5, 0, 0, 1) 0.5s;\n}\n[data-scroll=\"in\"] {\n\topacity: 1;\n\ttransform: translateY(0);\n}\n\n[data-scroll=\"out\"] {\n\topacity: 0;\n\ttransform: translateY(5rem);\n}\n\n// dev2\n// dev3\n// dev4","/* buttons */\n.btn {\n\tcursor: pointer;\n\tuser-select: none;\n\tdisplay: inline-flex;\n\talign-items: center;\n\tjustify-content: center;\n\tfont-family: $font-family-base;\n\tline-height: 1;\n\ttext-align: center;\n\ttext-decoration: none;\n\ttransition: $transition;\n\n\t&--md {\n\t\tpadding: 1.4rem 8.8rem;\n\t\t\n\t\t@include media('>=md') {\n\t\t\tpadding: 2.2rem 12.5rem;\n\t\t}\n\t}\n\n\t&--accent {\n\t\tborder: .5rem solid transparent;\n\t\tbackground-color: $colorAccent;\n\t\tcolor: $colorSecondary;\n\t\tfont-weight: $bold;\n\t\tfont-size: 1.6rem;\n\t\tletter-spacing: 0.02em;\n\t\ttransition-delay: 1s;\n\t\ttext-transform: uppercase;\n\n\t\t@include magic-border(.5rem, $colorAccent, 0.3s, 0);\n\t\t\n\t\t@include media('>=md') {\n\t\t\tfont-size: 2.2rem;\n\t\t}\n\n\t\t&:hover {\n\t\t\tbackground-color: rgba($colorAccent, .5);\n\t\t\ttext-decoration: none;\n\t\t\ttransition-delay: 0s;\n\t\t}\n\t}\n}","// mixins\n@mixin position-side($pos: absolute) {\n\tposition: $pos;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n\tbottom: 0;\n}\n\n@mixin position-cover() {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\theight: 100%;\n\twidth: 100%;\n\tobject-fit: cover;\n}\n\n@mixin magic-border($width, $color, $duration, $direction) {\n\tposition:relative;\n\n\t&:before{\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\twidth: calc(100% + #{$width * 2});\n\t\theight: calc(100% + #{$width * 2});\n\t\ttop: calc(#{$width}/-1);\n\t\tleft: calc(#{$width}/-1);\n\t\tbackground: linear-gradient(to right, $color 0%, $color 100%), linear-gradient(to top, $color 50%, transparent 50%), linear-gradient(to top, $color 50%, transparent 50%), linear-gradient(to right, $color 0%, $color 100%), linear-gradient(to left, $color 0%, $color 100%);\n\t\tbackground-repeat: no-repeat, no-repeat;\n\t\tbackground-size: 200% $width, $width 400%, $width 400%, 55% $width, 55% $width;\n\t\tbackground-position: 50% 100%, 0% 100%, 100% 100%, 100% 0%, 0% 0%;\n\t\ttransition: transform $duration ease-in-out, background-position $duration ease-in-out, background-size $duration ease-in-out;\n\t\ttransform: scaleX(1) rotate(180deg * $direction);\n\t\ttransition-delay: 0s, $duration, $duration*2;\n\t}\n\n\t&:hover{\n\t\t&:before{\n\t\t\tbackground-size: 100% $width, $width 200%, $width 200%, 0% $width, 0% $width;\n\t\t\tbackground-position: 50% 100%, 0% 0%, 100% 0%, 100% 0%, 0% 0%;\n\t\t\ttransform: scaleX(.2) rotate(180deg * $direction);\n\t\t\ttransition-delay: $duration*2, $duration, 0s;\n\t\t}\n\t}\n}\n\n// dev2\n// dev3\n// dev4","/* service */\r\n.service {\r\n\tposition: relative;\r\n\tbackground-color: $colorSecondary;\r\n\tcolor: $white;\r\n\r\n\t&__decor {\r\n\t\tpointer-events: none;\r\n\t\tposition: absolute;\r\n\t\ttop: 14rem;\r\n\t\tleft: 50%;\r\n\t\ttransform: translateX(-50%);\r\n\t\twidth: 58.5rem;\r\n\r\n\t\t@include media('>=md') {\r\n\t\t\ttop: 18rem;\r\n\t\t}\r\n\t}\r\n\t\r\n\t&__inner {\r\n\t\tpadding: 9rem 0 3rem;\r\n\r\n\t\t@include media('>=md') {\r\n\t\t\tpadding: 13rem 0 19rem;\r\n\t\t}\r\n\t}\r\n\r\n\t&__title {\r\n\t\tmargin-bottom: 6rem;\r\n\r\n\t\t@include media('>=md') {\r\n\t\t\tmargin-bottom: 12rem;\r\n\t\t}\r\n\t}\r\n\r\n\t&__list {\r\n\t\tlist-style: none;\r\n\t\tpadding: 0;\r\n\t\tmargin: 0;\r\n\t\t\r\n\t\t@include media('>=md') {\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-wrap: wrap;\r\n\t\t}\r\n\t}\r\n\r\n\t&__item {\r\n\t\tpadding: 0;\r\n\t\tmargin-bottom: 5rem;\r\n\r\n\t\t@include media('>=md') {\r\n\t\t\twidth: 50%;\r\n\t\t\tpadding: 0 5rem;\r\n\t\t\tmargin-bottom: 10rem;\r\n\t\t}\r\n\t\t\r\n\t\t@include media('>=lg') {\r\n\t\t\tpadding: 0 4.5rem 0 10rem;\r\n\t\t}\r\n\t}\r\n\t\r\n\t&__icon {\r\n\t\tdisplay: inline-flex;\r\n\t\twidth: 3.6rem;\r\n\t\tmargin-bottom: 3rem;\r\n\t\tcolor: $colorPrimary;\r\n\t\t\r\n\t\t@include media('>=md') {\r\n\t\t\twidth: 5.2rem;\r\n\t\t}\r\n\r\n\t\tsvg {\r\n\t\t\twidth: 100%;\r\n\t\t\theight: auto;\r\n\t\t}\r\n\t}\r\n\r\n\t&__subtitle {\r\n\t\tmargin-bottom: 3.5rem;\r\n\r\n\t\t@include media('>=md') {\r\n\t\t\tmargin-bottom: 5rem;\r\n\t\t}\r\n\t}\r\n\r\n\t&__text {\r\n\t\tmargin-bottom: 0;\r\n\t\tfont-weight: $light;\r\n\t\tcolor: $text;\r\n\t}\r\n}","/* documents */\r\n.documents {\r\n\tposition: relative;\r\n\tcolor: $white;\r\n\t\r\n\t@include media('>=md') {\r\n\t\tmargin-top: -10.8rem;\r\n\t}\r\n\r\n\t@include media('<xl') {\r\n\t\tbackground-color: $colorPrimary;\r\n\t}\r\n\t\r\n\t&__inner {\r\n\t\tposition: relative;\r\n\t\tpadding-top: 19.5rem;\r\n\t\t\r\n\t\t@include media('>=md') {\r\n\t\t\tpadding-top: 7rem;\r\n\t\t}\r\n\r\n\t\t@include media('>=xl') {\r\n\t\t\t&::before {\r\n\t\t\t\tcontent: '';\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\ttop: 0;\r\n\t\t\t\tbottom: 0;\r\n\t\t\t\tright: 0;\r\n\t\t\t\twidth: 100vw;\r\n\t\t\t\tbackground-color: inherit;\r\n\t\t\t\tbackground-color: $colorPrimary;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t&__content {\r\n\t\t@include media('<md') {\r\n\t\t\tmax-width: 20rem;\r\n\t\t\tpadding-bottom: 6.5rem;\r\n\t\t}\r\n\t\t\r\n\t\t@include media('>=md') {\r\n\t\t\tposition: relative;\r\n\t\t\twidth: 50%;\r\n\t\t\tpadding-right: 5rem;\r\n\t\t\tpadding-bottom: 9rem;\r\n\t\t}\r\n\t\t\r\n\t\t@include media('>=xl') {\r\n\t\t\tdisplay: flex;\r\n\t\t}\r\n\t}\r\n\r\n\t&__title {\r\n\t\tmargin-right: 9.5rem;\r\n\t\tmargin-bottom: 4.8rem;\r\n\t\tfont-weight: $extraBold;\r\n\t\ttext-transform: uppercase;\r\n\t}\r\n\r\n\t&__text {\r\n\t\tmargin-bottom: 0;\r\n\r\n\t\t@include media('>=md') {\r\n\t\t\tfont-size: 2.4rem;\r\n\t\t\tline-height: 1.41666666667;\r\n\t\t}\r\n\r\n\t\t@include media('>=xl') {\r\n\t\t\tmargin-top: 4.5rem;\r\n\t\t}\r\n\t}\r\n\r\n\t&__decor {\r\n\t\tpointer-events: none;\r\n\t\tposition: absolute;\r\n\t\ttop: 20rem;\r\n\t\tleft: -3rem;\r\n\t\twidth: 19.6rem;\r\n\t\t\r\n\t\t@include media('>=md') {\r\n\t\t\ttop: 0.8rem;\r\n\t\t\tleft: 0;\r\n\t\t\twidth: 23.8rem;\r\n\t\t}\r\n\t}\r\n\r\n\t&__control {\r\n\t\tposition: relative;\r\n\t\tbottom: -3.7rem;\r\n\t\twidth: 50%;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t&__btn {\r\n\t\tposition: absolute;\r\n\t\ttop: 100%;\r\n\t\tleft: 50%;\r\n\t\tz-index: 2;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t}\r\n\r\n\t&__visual {\r\n\t\tpointer-events: none;\r\n\t\tposition: absolute;\r\n\t\twidth: 46.4rem;\r\n\t\ttop: -4rem;\r\n\t\tright: -20rem;\r\n\t\tmargin: 0;\r\n\t\t\r\n\t\t@include media('>=md') {\r\n\t\t\twidth: 58%;\r\n\t\t\ttop: -7.3rem;\r\n\t\t\tright: -1.7rem;\r\n\t\t}\r\n\t}\r\n}","/* product */\r\n.product {\r\n\t&__inner {\r\n\t\tmin-height: 37.5rem;\r\n\t\tpadding-top: 9.5rem;\r\n\t\t\r\n\t\t@include media('>=md') {\r\n\t\t\tmin-height: 76rem;\r\n\t\t\tpadding-top: 16.5rem;\r\n\t\t}\r\n\t}\r\n}"]}